Index: tests/test_models/test_review.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#!/usr/bin/python3\r\nimport unittest\r\nfrom models.review import Review\r\n\r\n\r\nclass TestReview(unittest.TestCase):\r\n    \"\"\"Tests for the Review class.\"\"\"\r\n\r\n    def test_review_instance(self):\r\n        \"\"\"Test creating an instance of the Review class.\"\"\"\r\n        review = Review()\r\n        self.assertIsInstance(review, Review)\r\n\r\n    def test_review_attribute_place_id(self):\r\n        \"\"\"Test Review class 'place_id' attribute.\"\"\"\r\n        review = Review()\r\n        self.assertTrue(hasattr(review, 'place_id'))\r\n\r\n    def test_review_attribute_user_id(self):\r\n        \"\"\"Test Review class 'user_id' attribute.\"\"\"\r\n        review = Review()\r\n        self.assertTrue(hasattr(review, 'user_id'))\r\n\r\n    def test_review_attribute_text(self):\r\n        \"\"\"Test Review class 'text' attribute.\"\"\"\r\n        review = Review()\r\n        self.assertTrue(hasattr(review, 'text'))\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/test_models/test_review.py b/tests/test_models/test_review.py
--- a/tests/test_models/test_review.py	(revision 380522e64b0cf83c676ce98eede0abd6ce80b917)
+++ b/tests/test_models/test_review.py	(date 1707688038335)
@@ -6,6 +6,16 @@
 class TestReview(unittest.TestCase):
     """Tests for the Review class."""
 
+    def test_review_creation(self):
+        review = Review()
+        self.assertIsInstance(review, Review)
+        self.assertTrue(hasattr(review, 'id'))
+        self.assertTrue(hasattr(review, 'created_at'))
+        self.assertTrue(hasattr(review, 'updated_at'))
+        self.assertEqual(review.place_id, "")
+        self.assertEqual(review.user_id, "")
+        self.assertEqual(review.text, "")
+
     def test_review_instance(self):
         """Test creating an instance of the Review class."""
         review = Review()
@@ -26,5 +36,13 @@
         review = Review()
         self.assertTrue(hasattr(review, 'text'))
 
+    def test_review_to_dict(self):
+        review = Review()
+        review_dict = review.to_dict()
+        expected_keys = ['__class__', 'id', 'created_at', 'updated_at']
+        self.assertEqual(sorted(review_dict.keys()), sorted(expected_keys))
+        self.assertEqual(review_dict['__class__'], 'Review')
+
+
 if __name__ == '__main__':
     unittest.main()
Index: tests/test_models/test_amenity.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#!/usr/bin/python3\r\nimport unittest\r\nfrom models.amenity import Amenity\r\n\r\n\r\nclass TestAmenity(unittest.TestCase):\r\n    \"\"\"Tests for the Amenity class.\"\"\"\r\n\r\n    def test_amenity_instance(self):\r\n        \"\"\"Test creating an instance of the Amenity class.\"\"\"\r\n        amenity = Amenity()\r\n        self.assertIsInstance(amenity, Amenity)\r\n\r\n    def test_amenity_attribute_name(self):\r\n        \"\"\"Test Amenity class 'name' attribute.\"\"\"\r\n        amenity = Amenity()\r\n        self.assertTrue(hasattr(amenity, 'name'))\r\n\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/test_models/test_amenity.py b/tests/test_models/test_amenity.py
--- a/tests/test_models/test_amenity.py	(revision 380522e64b0cf83c676ce98eede0abd6ce80b917)
+++ b/tests/test_models/test_amenity.py	(date 1707688691658)
@@ -16,6 +16,13 @@
         amenity = Amenity()
         self.assertTrue(hasattr(amenity, 'name'))
 
+    def test_amenity_to_dict(self):
+        amenity = Amenity()
+        amenity_dict = amenity.to_dict()
+        expected_keys = ['__class__', 'id', 'created_at', 'updated_at']
+        self.assertEqual(sorted(amenity_dict.keys()), sorted(expected_keys))
+        self.assertEqual(amenity_dict['__class__'], 'Amenity')
+
 
 if __name__ == '__main__':
     unittest.main()
Index: tests/test_models/test_city.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#!/usr/bin/python3\r\nimport unittest\r\nfrom models.city import City\r\n\r\n\r\nclass TestCity(unittest.TestCase):\r\n    \"\"\"Tests for the City class.\"\"\"\r\n\r\n    def test_city_instance(self):\r\n        \"\"\"Test creating an instance of the City class.\"\"\"\r\n        city = City()\r\n        self.assertIsInstance(city, City)\r\n\r\n    def test_city_attribute_state_id(self):\r\n        \"\"\"Test City class 'state_id' attribute.\"\"\"\r\n        city = City()\r\n        self.assertTrue(hasattr(city, 'state_id'))\r\n\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/test_models/test_city.py b/tests/test_models/test_city.py
--- a/tests/test_models/test_city.py	(revision 380522e64b0cf83c676ce98eede0abd6ce80b917)
+++ b/tests/test_models/test_city.py	(date 1707688628870)
@@ -16,6 +16,13 @@
         city = City()
         self.assertTrue(hasattr(city, 'state_id'))
 
+    def test_city_to_dict(self):
+        city = City()
+        city_dict = city.to_dict()
+        expected_keys = ['__class__', 'id', 'created_at', 'updated_at']
+        self.assertEqual(sorted(city_dict.keys()), sorted(expected_keys))
+        self.assertEqual(city_dict['__class__'], 'City')
+
 
 if __name__ == '__main__':
     unittest.main()
Index: tests/test_models/test_place.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#!/usr/bin/python3\r\nimport unittest\r\nfrom models.place import Place\r\n\r\n\r\nclass TestPlace(unittest.TestCase):\r\n    \"\"\"Tests for the Place class.\"\"\"\r\n\r\n    def test_place_instance(self):\r\n        \"\"\"Test creating an instance of the Place class.\"\"\"\r\n        place = Place()\r\n        self.assertIsInstance(place, Place)\r\n\r\n    def test_place_attribute_city_id(self):\r\n        \"\"\"Test Place class 'city_id' attribute.\"\"\"\r\n        place = Place()\r\n        self.assertTrue(hasattr(place, 'city_id'))\r\n\r\n    def test_place_attribute_user_id(self):\r\n        \"\"\"Test Place class 'user_id' attribute.\"\"\"\r\n        place = Place()\r\n        self.assertTrue(hasattr(place, 'user_id'))\r\n\r\n    def test_place_attribute_name(self):\r\n        \"\"\"Test Place class 'name' attribute.\"\"\"\r\n        place = Place()\r\n        self.assertTrue(hasattr(place, 'name'))\r\n\r\n    def test_place_attribute_description(self):\r\n        \"\"\"Test Place class 'description' attribute.\"\"\"\r\n        place = Place()\r\n        self.assertTrue(hasattr(place, 'description'))\r\n\r\n    def test_place_attribute_number_rooms(self):\r\n        \"\"\"Test Place class 'number_rooms' attribute.\"\"\"\r\n        place = Place()\r\n        self.assertTrue(hasattr(place, 'number_rooms'))\r\n\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/test_models/test_place.py b/tests/test_models/test_place.py
--- a/tests/test_models/test_place.py	(revision 380522e64b0cf83c676ce98eede0abd6ce80b917)
+++ b/tests/test_models/test_place.py	(date 1707688573374)
@@ -36,6 +36,13 @@
         place = Place()
         self.assertTrue(hasattr(place, 'number_rooms'))
 
+    def test_review_to_dict(self):
+        place = Place()
+        place_dict = place.to_dict()
+        expected_keys = ['__class__', 'id', 'created_at', 'updated_at']
+        self.assertEqual(sorted(place_dict.keys()), sorted(expected_keys))
+        self.assertEqual(place_dict['__class__'], 'Place')
+
 
 if __name__ == '__main__':
     unittest.main()
Index: tests/test_models/test_state.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#!/usr/bin/python3\r\nimport unittest\r\nfrom models.state import State\r\n\r\n\r\nclass TestState(unittest.TestCase):\r\n    \"\"\"Test the state file\"\"\"\r\n\r\n    def test_state_instance(self):\r\n        \"\"\"Test creating an instance of the State class.\"\"\"\r\n        state = State()\r\n        self.assertIsInstance(state, State)\r\n\r\n    def test_state_attribute_name(self):\r\n        \"\"\"Test State class 'name' attribute.\"\"\"\r\n        state = State()\r\n        self.assertTrue(hasattr(state, 'name'))\r\n\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/test_models/test_state.py b/tests/test_models/test_state.py
--- a/tests/test_models/test_state.py	(revision 380522e64b0cf83c676ce98eede0abd6ce80b917)
+++ b/tests/test_models/test_state.py	(date 1707687147241)
@@ -14,7 +14,17 @@
     def test_state_attribute_name(self):
         """Test State class 'name' attribute."""
         state = State()
-        self.assertTrue(hasattr(state, 'name'))
+        self.assertIsInstance(state, State)
+        self.assertTrue(hasattr(state, 'id'))
+        self.assertTrue(hasattr(state, 'created_at'))
+        self.assertTrue(hasattr(state, 'updated_at'))
+        self.assertEqual(state.name, "")
+
+    def test_state_to_dict(self):
+        state = State()
+        state_dict = state.to_dict()
+        expected_keys = ['__class__', 'id', 'created_at', 'updated_at']
+        self.assertEqual(sorted(state_dict.keys()), sorted(expected_keys))
 
 
 if __name__ == '__main__':
Index: tests/test_models/test_user.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#!/usr/bin/python3\r\nimport unittest\r\nfrom models.user import User\r\n\r\n\r\nclass TestUser(unittest.TestCase):\r\n    \"\"\"Test for the User class\"\"\"\r\n\r\n    def test_user_instance(self):\r\n        \"\"\"Test creating an instance of the User class.\"\"\"\r\n        user = User()\r\n        self.assertIsInstance(user, User)\r\n\r\n    def test_user_attributes(self):\r\n        \"\"\"Test User class attributes.\"\"\"\r\n        user = User()\r\n        self.assertTrue(hasattr(user, 'email'))\r\n        self.assertTrue(hasattr(user, 'password'))\r\n        self.assertTrue(hasattr(user, 'first_name'))\r\n        self.assertTrue(hasattr(user, 'last_name'))\r\n\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/test_models/test_user.py b/tests/test_models/test_user.py
--- a/tests/test_models/test_user.py	(revision 380522e64b0cf83c676ce98eede0abd6ce80b917)
+++ b/tests/test_models/test_user.py	(date 1707687992950)
@@ -14,10 +14,20 @@
     def test_user_attributes(self):
         """Test User class attributes."""
         user = User()
-        self.assertTrue(hasattr(user, 'email'))
-        self.assertTrue(hasattr(user, 'password'))
-        self.assertTrue(hasattr(user, 'first_name'))
-        self.assertTrue(hasattr(user, 'last_name'))
+        self.assertIsInstance(user, User)
+        self.assertTrue(hasattr(user, 'id'))
+        self.assertTrue(hasattr(user, 'created_at'))
+        self.assertTrue(hasattr(user, 'updated_at'))
+        self.assertEqual(user.email, "")
+        self.assertEqual(user.password, "")
+        self.assertEqual(user.first_name, "")
+        self.assertEqual(user.last_name, "")
+
+    def test_user_to_dict(self):
+        user = User()
+        user_dict = user.to_dict()
+        expected_keys = ['__class__', 'id', 'created_at', 'updated_at']
+        self.assertEqual(sorted(user_dict.keys()), sorted(expected_keys))
 
 
 if __name__ == '__main__':
Index: file.json
===================================================================
diff --git a/file.json b/file.json
deleted file mode 100644
--- a/file.json	(revision 380522e64b0cf83c676ce98eede0abd6ce80b917)
+++ /dev/null	(revision 380522e64b0cf83c676ce98eede0abd6ce80b917)
@@ -1,1 +0,0 @@
-{"BaseModel.97749228-f5ee-49ab-99cb-2924b0d5a320": {"id": "97749228-f5ee-49ab-99cb-2924b0d5a320", "created_at": "2024-02-10T13:41:53.804301", "updated_at": "2024-02-10T13:41:53.804305", "__class__": "BaseModel"}, "BaseModel.cefe70f8-b9c6-4de9-9a96-7cfafe436ff2": {"id": "cefe70f8-b9c6-4de9-9a96-7cfafe436ff2", "created_at": "2024-02-10T13:41:53.804386", "updated_at": "2024-02-10T13:41:53.804388", "__class__": "BaseModel"}, "BaseModel.62a47283-a73c-411d-8e5f-33d60ee77ee9": {"id": "62a47283-a73c-411d-8e5f-33d60ee77ee9", "created_at": "2024-02-10T13:41:53.804454", "updated_at": "2024-02-10T13:41:53.804456", "__class__": "BaseModel"}, "BaseModel.060174a5-05b5-4caa-a43d-64a8a09fa097": {"id": "060174a5-05b5-4caa-a43d-64a8a09fa097", "created_at": "2024-02-10T13:41:53.804565", "updated_at": "2024-02-10T13:41:53.804566", "name": "ALX", "number": 89, "__class__": "BaseModel"}, "BaseModel.9ce54d47-4063-46fe-b341-9464376b0b14": {"id": "9ce54d47-4063-46fe-b341-9464376b0b14", "created_at": "2024-02-10T13:41:53.804641", "updated_at": "2024-02-10T13:41:53.804647", "__class__": "BaseModel"}, "BaseModel.17096747-d5f6-471f-85c2-8cc0ed60f67f": {"id": "17096747-d5f6-471f-85c2-8cc0ed60f67f", "created_at": "2024-02-11T13:19:18.874303", "updated_at": "2024-02-11T13:19:18.874310", "__class__": "BaseModel"}}
\ No newline at end of file
